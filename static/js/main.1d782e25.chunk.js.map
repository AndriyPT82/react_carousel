{"version":3,"sources":["components/Carousel.jsx","App.jsx","index.js"],"names":["Carousel","state","marginLimit","props","images","length","frameSize","imgMargin","setCountChangePosition","event","updatedImgMargin","target","buttonName","name","step","value","stepDirection","newImageCountInMargin","setState","this","itemWidth","animationDuration","updatedFrameSize","infinite","updatedMargin","className","style","width","marginLeft","transition","map","img","key","src","alt","type","onClick","React","Component","App","setValueOnState","e","onChange","min","max","defaultValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d782e25.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n\n  state = {\n    marginLimit: this.props.images.length - this.props.frameSize,\n    imgMargin: 0,\n  }\n\n  setCountChangePosition = (event) => {\n    const { name: buttonName, value: step } = event.target;\n    const { marginLimit, imgMargin } = this.state;\n    const stepDirection = buttonName === 'prev' ? -(+step) : +step;\n    \n\n    // console.log(this.props);\n\n\n    let updatedImgMargin;\n\n    if ((imgMargin === -marginLimit && buttonName !== 'next')\n      || (imgMargin === 0 && buttonName !== 'prev')) {\n      updatedImgMargin = imgMargin === 0 ? -marginLimit : marginLimit;\n    } else {\n      const newImageCountInMargin = imgMargin + stepDirection;\n\n      if (newImageCountInMargin < -marginLimit && buttonName === 'prev') {\n        updatedImgMargin = -marginLimit - imgMargin;\n      }\n\n      if (newImageCountInMargin > 0 && buttonName === 'next') {\n        updatedImgMargin = -imgMargin;\n      }\n    }\n\n    this.setState({\n      imgMargin: imgMargin + (updatedImgMargin || stepDirection),\n    });\n  };\n\n  render() {\n    const {\n      frameSize,\n      itemWidth,\n      images,\n      step,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const updatedFrameSize = itemWidth * frameSize;\n    const updatedMargin = this.state.imgMargin * itemWidth;\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"images-frame\" style={{ width: updatedFrameSize }}>\n          <ul\n            className=\"images-list\"\n            style={{\n              marginLeft: updatedMargin, transition: `${animationDuration}ms`,\n            }}\n          >\n            {\n              images.map(img => (\n                <li key={img} className=\"image\">\n                  <img style={{ width: +itemWidth }} src={img} alt=\"smile\" />\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"button prev\"\n          name=\"prev\"\n          value={step}\n          onClick={this.setCountChangePosition}\n        />\n        <button\n          type=\"button\"\n          className=\"button next\"\n          name=\"next\"\n          value={step}\n          onClick={this.setCountChangePosition}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setValueOnState = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"title\">Carousel with {images.length} images</h1>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <section className=\"option\" onChange={this.setValueOnState}>\n\n          <div className=\"input-wrapper\">\n            <span className=\"label\">Step</span>\n            <span className=\"count\">{step}</span>\n\n            <input type=\"range\" name=\"step\" min=\"1\" max=\"5\" defaultValue=\"3\" />\n          </div>\n\n          <div className=\"input-wrapper\">\n            <span className=\"label\">Smile Size</span>\n            <span className=\"count\">{itemWidth}</span>\n\n            <input\n              type=\"range\"\n              name=\"itemWidth\"\n              min=\"70\"\n              max=\"200\"\n              defaultValue=\"130\"\n            />\n          </div>\n\n          <div className=\"input-wrapper\">\n            <span className=\"label\">Frame Size</span>\n            <span className=\"count\">{frameSize}</span>\n\n            <input\n              type=\"range\"\n              name=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              defaultValue=\"3\"\n            />\n          </div>\n\n          <div className=\"input-wrapper\">\n            <span className=\"label\">Animation Duration</span>\n            <span className=\"count\">{animationDuration}</span>\n\n            <input\n              type=\"range\"\n              name=\"animationDuration\"\n              min=\"250\"\n              max=\"5000\"\n              step=\"250\"\n              defaultValue=\"1000\"\n            />\n          </div>        \n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}